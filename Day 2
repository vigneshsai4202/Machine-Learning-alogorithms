Second day of machine learning, Interactive exercise providing a hands-on code demo in Python
• Problem Revisited: The video revisits a problem from a previous session, where a bank robber travels at 2.5 kilometers per minute, and a sheriff starts 5 minutes later, traveling at 3 kilometers per minute. Previously, this system of linear equations was solved graphically by hand to find when and where the sheriff catches the bank robber.
• Python Plotting for Precision: Instead of sketching by hand, the video demonstrates how to create a precise plot in Python using the same information. This allows for a neat and accurate visualization of the solution.
• Key Python Libraries Used:
    ◦ NumPy: Used as the numeric library in Python, specifically for creating time points.
    ◦ Matplotlib: The popular Python library for creating plots.
• Steps in the Code Demo:
    ◦ Simulating Time: Time (t) is simulated from 0 to 40 minutes using numpy.linspace, creating 1000 points for detail. The 40-minute cap is chosen because the solution to the problem (bank robber caught after 30 minutes) is already known.
    ◦ Defining Distance Functions:
        ▪ The robber's distance is d = 2.5 * t.
        ▪ The sheriff's distance is d = 3 * (t - 5).
    ◦ Creating the Plot: A Matplotlib plot is initiated with:
        ▪ A title: "Bank Robber Caught".
        ▪ X-axis label: "Time in Minutes".
        ▪ Y-axis label: "Distance in Kilometers".
    ◦ Setting Boundaries: The plot limits are set based on the known solutions: x-axis from 0 to 40 minutes and y-axis from 0 to 100 kilometers (just beyond the 75 km catch point).
    ◦ Plotting the Lines: The bank robber's journey is plotted in green, and the sheriff's journey is plotted in brown.
    ◦ Marking the Solution: Purple hatched lines are added to clearly indicate the intersection point: a vertical line at the 30-minute mark (x=30) and a horizontal line at the 75-kilometer mark (y=75).
• Future Learning: This demo is presented as a "taste" of the many hands-on code demos coming up in the Machine Learning Foundations series. You'll learn how to execute these interactive Jupiter notebooks using the Google Colab environment in a future video called "Scalars". The next video, however, will be a paper-and-pencil exercise on a different problem involving solar panels.


Sources:https://youtu.be/ibTYANFwrNc?si=ud-Xsy0sOwviXOvg
